{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programmieren\\\\Traningsplan\\\\src\\\\components\\\\TrackingSystem.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrackingSystem = () => {\n  _s();\n  const [workouts, setWorkouts] = useState([]);\n  const [exercise, setExercise] = useState('');\n  const [sets, setSets] = useState('');\n  const [reps, setReps] = useState('');\n  const [date, setDate] = useState('');\n  const handleAddWorkout = () => {\n    const newWorkout = {\n      exercise,\n      sets: parseInt(sets),\n      reps: parseInt(reps),\n      date: new Date(date).toLocaleDateString()\n    };\n    setWorkouts([...workouts, newWorkout]);\n    resetForm();\n  };\n  const resetForm = () => {\n    setExercise('');\n    setSets('');\n    setReps('');\n    setDate('');\n  };\n\n  // CSV Export\n  const exportCSV = () => {\n    const header = 'Datum,Übung,Sätze,Wdh.\\n';\n    const csv = header + workouts.map(w => `${w.date},${w.exercise},${w.sets},${w.reps}`).join('\\n');\n    const blob = new Blob([csv], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'trainingsdaten.csv';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Workout Tracking System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleAddWorkout();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"exercise\",\n        children: \"\\xDCbung:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"exercise\",\n        type: \"text\",\n        placeholder: \"Exercise\",\n        value: exercise,\n        onChange: e => setExercise(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sets\",\n        children: \"S\\xE4tze:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"sets\",\n        type: \"number\",\n        placeholder: \"Sets\",\n        value: sets,\n        onChange: e => setSets(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"reps\",\n        children: \"Wiederholungen:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"reps\",\n        type: \"number\",\n        placeholder: \"Reps\",\n        value: reps,\n        onChange: e => setReps(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Datum:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Workout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Logged Workouts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: workouts.map((workout, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [workout.date, \": \", workout.exercise, \" - \", workout.sets, \" sets of \", workout.reps, \" reps\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportCSV,\n      children: \"Export als CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(TrackingSystem, \"+P4WQBqdywsJI3QXVm96Zld4Gg8=\");\n_c = TrackingSystem;\nexport default TrackingSystem;\nvar _c;\n$RefreshReg$(_c, \"TrackingSystem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TrackingSystem","_s","workouts","setWorkouts","exercise","setExercise","sets","setSets","reps","setReps","date","setDate","handleAddWorkout","newWorkout","parseInt","Date","toLocaleDateString","resetForm","exportCSV","header","csv","map","w","join","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","htmlFor","id","placeholder","value","onChange","target","required","workout","index","onClick","_c","$RefreshReg$"],"sources":["E:/Programmieren/Traningsplan/src/components/TrackingSystem.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from 'react';\r\n\r\ntype Workout = {\r\n    exercise: string;\r\n    sets: number;\r\n    reps: number;\r\n    date: string;\r\n};\r\n\r\nconst TrackingSystem: React.FC = () => {\r\n    const [workouts, setWorkouts] = useState<Workout[]>([]);\r\n    const [exercise, setExercise] = useState<string>('');\r\n    const [sets, setSets] = useState<string>('');\r\n    const [reps, setReps] = useState<string>('');\r\n    const [date, setDate] = useState<string>('');\r\n\r\n    const handleAddWorkout = () => {\r\n        const newWorkout: Workout = {\r\n            exercise,\r\n            sets: parseInt(sets),\r\n            reps: parseInt(reps),\r\n            date: new Date(date).toLocaleDateString(),\r\n        };\r\n        setWorkouts([...workouts, newWorkout]);\r\n        resetForm();\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setExercise('');\r\n        setSets('');\r\n        setReps('');\r\n        setDate('');\r\n    };\r\n\r\n    // CSV Export\r\n    const exportCSV = () => {\r\n        const header = 'Datum,Übung,Sätze,Wdh.\\n';\r\n        const csv =\r\n            header +\r\n            workouts\r\n                .map(\r\n                    (w) => `${w.date},${w.exercise},${w.sets},${w.reps}`\r\n                )\r\n                .join('\\n');\r\n        const blob = new Blob([csv], { type: 'text/csv' });\r\n        const url = URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = 'trainingsdaten.csv';\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Workout Tracking System</h2>\r\n            <form\r\n                onSubmit={(e: FormEvent<HTMLFormElement>) => {\r\n                    e.preventDefault();\r\n                    handleAddWorkout();\r\n                }}\r\n            >\r\n                <label htmlFor=\"exercise\">Übung:</label>\r\n                <input\r\n                    id=\"exercise\"\r\n                    type=\"text\"\r\n                    placeholder=\"Exercise\"\r\n                    value={exercise}\r\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => setExercise(e.target.value)}\r\n                    required\r\n                />\r\n                <label htmlFor=\"sets\">Sätze:</label>\r\n                <input\r\n                    id=\"sets\"\r\n                    type=\"number\"\r\n                    placeholder=\"Sets\"\r\n                    value={sets}\r\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => setSets(e.target.value)}\r\n                    required\r\n                />\r\n                <label htmlFor=\"reps\">Wiederholungen:</label>\r\n                <input\r\n                    id=\"reps\"\r\n                    type=\"number\"\r\n                    placeholder=\"Reps\"\r\n                    value={reps}\r\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => setReps(e.target.value)}\r\n                    required\r\n                />\r\n                <label htmlFor=\"date\">Datum:</label>\r\n                <input\r\n                    id=\"date\"\r\n                    type=\"date\"\r\n                    value={date}\r\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => setDate(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Add Workout</button>\r\n            </form>\r\n            <h3>Logged Workouts</h3>\r\n            <ul>\r\n                {workouts.map((workout, index) => (\r\n                    <li key={index}>\r\n                        {workout.date}: {workout.exercise} - {workout.sets} sets of {workout.reps} reps\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <button onClick={exportCSV}>Export als CSV</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TrackingSystem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}