{"ast":null,"code":"import React,{useState}from'react';import'./TrackingSystem.css';import{Line}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend}from'chart.js';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend);const TrackingSystem=()=>{const[workouts,setWorkouts]=useState([]);const[exercise,setExercise]=useState('');const[sets,setSets]=useState('');const[reps,setReps]=useState('');const[weight,setWeight]=useState('');// Erweiterung: Zeit-Feld für Planks/Core/Mobility/Farmer's Walk/Sprints\nconst[duration,setDuration]=useState('');const[notes,setNotes]=useState('');const[tab,setTab]=useState('entry');// Dropdown-Übungen\nconst exerciseOptions=['Kniebeugen','Bankdrücken','Rudern','Schulterdrücken','Kreuzheben','Ausfallschritte','Klimmzüge','Push-Ups','Trizepsdrücken','Sprungübungen','Power Cleans',\"Farmer's Walk\",'Planks','Core','Mobility','Sprints','Agility Ladder','Medizinballwürfe','Box Jumps'];const timeExercises=['Planks','Core','Mobility',\"Farmer's Walk\",'Sprints'];function isTimeExercise(ex){return timeExercises.includes(ex);}const handleAddWorkout=()=>{const newWorkout={exercise,date:new Date().toLocaleDateString(),notes};if(isTimeExercise(exercise)){newWorkout.duration=parseInt(duration);newWorkout.weight=weight?parseFloat(weight):0;}else{newWorkout.sets=parseInt(sets);newWorkout.reps=parseInt(reps);newWorkout.weight=parseFloat(weight);}setWorkouts([...workouts,newWorkout]);resetForm();};const resetForm=()=>{setExercise('');setSets('');setReps('');setWeight('');setDuration('');setNotes('');};// CSV Export\nconst exportCSV=()=>{const header='Datum,Übung,Gewicht,Sätze,Wdh.,Notizen\\n';const csv=header+workouts.map(w=>\"\".concat(w.date,\",\").concat(w.exercise,\",\").concat(w.weight,\",\").concat(w.sets,\",\").concat(w.reps,\",\").concat(w.notes)).join('\\n');const blob=new Blob([csv],{type:'text/csv'});const url=URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download='trainingsdaten.csv';a.click();URL.revokeObjectURL(url);};// Workout löschen\nconst handleDeleteWorkout=index=>{setWorkouts(workouts.filter((_,i)=>i!==index));};return/*#__PURE__*/_jsxs(\"div\",{className:\"tracking-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tab-bar\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setTab('entry'),className:tab==='entry'?'tab-btn active':'tab-btn',children:\"Trainingseintrag\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setTab('stats'),className:tab==='stats'?'tab-btn active':'tab-btn',children:\"Auswertung\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setTab('infos'),className:tab==='infos'?'tab-btn active':'tab-btn',children:\"Infos\"})]}),tab==='entry'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"heading-entries center\",children:\"Workout Tracking\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tracking-container\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"heading-exercise\",children:\"Trainingsplan f\\xFCr 18 Wochen \\u2013 Right Guard (American Football)\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"3x pro Woche, jeweils ca. 2 Stunden\"})}),/*#__PURE__*/_jsxs(\"ol\",{className:\"plan-list\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Woche 1-4: Grundlagen & Technik\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Tag 1 (Kraft): Kniebeugen 4x6, Bankdr\\xFCcken 4x6, Rudern 4x8, Planks 3x1min\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Tag 2 (Explosivkraft): Kettlebell Swings 4x12, Box Jumps 4x8, Medizinballw\\xFCrfe 4x10, Mobility 15min\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Tag 3 (Oberk\\xF6rper & Speed): Schulterdr\\xFCcken 4x8, Klimmz\\xFCge (Assist) 4xmax, Push-Ups 4xmax, Sprints (10-20m) 6x\"})]})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Woche 5-8: Kraftsteigerung & Explosivit\\xE4t\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Tag 1 (Beine & Core): Kniebeugen 5x5, Kreuzheben 4x6, Ausfallschritte 4x10, Farmer's Walk 4x30m\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Tag 2 (Oberk\\xF6rper): Bankdr\\xFCcken 5x5, Schulterdr\\xFCcken 4x8, Rudern 4x8, Trizepsdr\\xFCcken 4x12\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Tag 3 (Speed & Plyos): Sprung\\xFCbungen 4x8, Medizinballw\\xFCrfe 4x10, Agility Ladder 10min, Core 3x20\"})]})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Woche 9-12: Maximalkraft & Schnellkraft\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Tag 1 (Kraft & Explosivit\\xE4t): Kniebeugen 5x4, Power Cleans 5x4, Planks 3x1min, Mobility 10min\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Tag 2 (Oberk\\xF6rper): Bankdr\\xFCcken 5x4, Klimmz\\xFCge 4xmax, Push-Ups 4xmax, Trizepsdr\\xFCcken 4x10\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Tag 3 (Speed & Agility): Explosivit\\xE4t 4x8, Sprints (20-30m) 8x, Agility Ladder & Richtungswechsel 15min, Core 3x20\"})]})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Woche 13-16: Intensivierung & Peak\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Tag 1 (Kraft): Kniebeugen 5x3, Kreuzheben 4x4, Farmer's Walk 4x40m, Planks 3x1min\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Tag 2 (Oberk\\xF6rper): Bankdr\\xFCcken 5x3, Schulterdr\\xFCcken 4x6, Rudern 4x8, Mobility 10min\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Tag 3 (Speed & Plyos): Speed & Plyos 20min, Explosivit\\xE4t 4x8, Core 3x20\"})]})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Woche 17-18: Saisonvorbereitung & Regeneration\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Tag 1: Kniebeugen 3x5, Power Cleans 3x5, Planks 3x1min\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Tag 2: Bankdr\\xFCcken 3x5, Klimmz\\xFCge 3xmax, Push-Ups 3xmax\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Tag 3: Explosivit\\xE4t 3x8, Mobility & Stretching 20min\"})]})]})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"plan-note\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Hinweise:\"}),\" Steigere die Gewichte jede Woche moderat, achte auf saubere Technik.\",/*#__PURE__*/_jsx(\"br\",{}),\"Explosivkraft-\\xDCbungen immer mit maximaler Geschwindigkeit ausf\\xFChren.\",/*#__PURE__*/_jsx(\"br\",{}),\"Sprints und Agility-Drills mit voller Intensit\\xE4t, aber ausreichend Pausen.\",/*#__PURE__*/_jsx(\"br\",{}),\"Mobility und Core sind in jeder Einheit wichtig f\\xFCr Verletzungsprophylaxe und Stabilit\\xE4t.\"]})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:e=>{e.preventDefault();handleAddWorkout();},className:\"form-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"exercise\",children:\"\\xDCbung\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"exercise\",value:exercise,onChange:e=>setExercise(e.target.value),required:true,className:\"input-field\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Bitte w\\xE4hlen...\"}),exerciseOptions.map(opt=>/*#__PURE__*/_jsx(\"option\",{value:opt,children:opt},opt))]})]}),!isTimeExercise(exercise)&&exercise&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"weight\",children:\"Gewicht (kg)\"}),/*#__PURE__*/_jsx(\"input\",{id:\"weight\",type:\"number\",placeholder:\"Gewicht\",value:weight,onChange:e=>setWeight(e.target.value),required:true,className:\"input-field\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"sets\",children:\"S\\xE4tze\"}),/*#__PURE__*/_jsx(\"input\",{id:\"sets\",type:\"number\",placeholder:\"Sets\",value:sets,onChange:e=>setSets(e.target.value),required:true,className:\"input-field\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"reps\",children:\"Wiederholungen\"}),/*#__PURE__*/_jsx(\"input\",{id:\"reps\",type:\"number\",placeholder:\"Reps\",value:reps,onChange:e=>setReps(e.target.value),required:true,className:\"input-field\"})]})]}),isTimeExercise(exercise)&&exercise&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"duration\",children:\"Dauer (Sekunden)\"}),/*#__PURE__*/_jsx(\"input\",{id:\"duration\",type:\"number\",placeholder:\"Zeit in Sekunden\",value:duration,onChange:e=>setDuration(e.target.value),required:true,className:\"input-field\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"weight\",children:\"Zusatzgewicht (kg)\"}),/*#__PURE__*/_jsx(\"input\",{id:\"weight\",type:\"number\",placeholder:\"Zusatzgewicht (kg)\",value:weight,onChange:e=>setWeight(e.target.value),className:\"input-field\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"notes\",children:\"Notizen\"}),/*#__PURE__*/_jsx(\"input\",{id:\"notes\",type:\"text\",placeholder:\"Notizen\",value:notes,onChange:e=>setNotes(e.target.value),className:\"input-field\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"tab-btn active\",children:\"Workout hinzuf\\xFCgen\"})]}),/*#__PURE__*/_jsx(\"h3\",{className:\"heading-entries\",children:\"Deine Eintr\\xE4ge\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"entries-list\",children:workouts.map((workout,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"entry-item light\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:workout.date}),\": \",workout.exercise,\" \\u2013 \",workout.weight,\" kg, \",workout.sets,\" S\\xE4tze x \",workout.reps,\" Wdh. \",workout.notes&&/*#__PURE__*/_jsxs(_Fragment,{children:[\"| \",/*#__PURE__*/_jsx(\"em\",{children:workout.notes})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteWorkout(index),className:\"delete-btn\",\"aria-label\":\"Eintrag l\\xF6schen\",children:\"L\\xF6schen\"})]},index))}),/*#__PURE__*/_jsx(\"button\",{onClick:exportCSV,className:\"export-btn\",children:\"Export als CSV\"})]}),tab==='stats'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"heading-entries center\",children:\"Auswertung\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tracking-container\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Trainingsanzahl:\"}),\" \",workouts.length]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Gesamtgewicht bewegt:\"}),\" \",workouts.filter(w=>w.weight!==undefined&&w.sets!==undefined&&w.reps!==undefined).reduce((sum,w)=>{var _w$weight,_w$sets,_w$reps;return sum+((_w$weight=w.weight)!==null&&_w$weight!==void 0?_w$weight:0)*((_w$sets=w.sets)!==null&&_w$sets!==void 0?_w$sets:0)*((_w$reps=w.reps)!==null&&_w$reps!==void 0?_w$reps:0);},0),\" kg\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Durchschnittliches Gewicht pro Satz:\"}),\" \",(()=>{const kraftWorkouts=workouts.filter(w=>w.weight!==undefined);return kraftWorkouts.length>0?(kraftWorkouts.reduce((sum,w)=>{var _w$weight2;return sum+((_w$weight2=w.weight)!==null&&_w$weight2!==void 0?_w$weight2:0);},0)/kraftWorkouts.length).toFixed(2):0;})(),\" kg\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Letztes Training:\"}),\" \",workouts.length>0?workouts[workouts.length-1].date:'-']})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tracking-container\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"heading-main\",children:\"Gewichtsentwicklung (alle Eintr\\xE4ge)\"}),/*#__PURE__*/_jsx(Line,{data:{labels:workouts.map(w=>w.date),datasets:[{label:'Gewicht (kg)',data:workouts.map(w=>w.weight),borderColor:'#43a047',backgroundColor:'rgba(67,160,71,0.2)',tension:0.3}]},options:{responsive:true,plugins:{legend:{labels:{color:'#f5f5f5'}}},scales:{x:{ticks:{color:'#f5f5f5'},grid:{color:'#333'}},y:{ticks:{color:'#f5f5f5'},grid:{color:'#333'}}}}}),/*#__PURE__*/_jsx(\"h3\",{className:\"heading-main heading-margin\",children:\"Auswertung pro \\xDCbung\"}),Array.from(new Set(workouts.map(w=>w.exercise))).map(exerciseName=>{const exerciseData=workouts.filter(w=>w.exercise===exerciseName);return/*#__PURE__*/_jsxs(\"div\",{className:\"tracking-container\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"heading-exercise\",children:exerciseName}),/*#__PURE__*/_jsx(Line,{data:{labels:exerciseData.map(w=>w.date),datasets:[{label:\"\".concat(exerciseName,\" Gewicht (kg)\"),data:exerciseData.map(w=>w.weight),borderColor:'#1976d2',backgroundColor:'rgba(25,118,210,0.2)',tension:0.3}]},options:{responsive:true,plugins:{legend:{labels:{color:'#f5f5f5'}}},scales:{x:{ticks:{color:'#f5f5f5'},grid:{color:'#333'}},y:{ticks:{color:'#f5f5f5'},grid:{color:'#333'}}}}})]},exerciseName);})]}),/*#__PURE__*/_jsx(\"h3\",{className:\"heading-entries\",children:\"Alle Eintr\\xE4ge\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"entries-list\",children:workouts.map((workout,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"entry-item\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:workout.date}),\": \",workout.exercise,\" \\u2013 \",workout.weight,\" kg, \",workout.sets,\" S\\xE4tze x \",workout.reps,\" Wdh. \",workout.notes&&/*#__PURE__*/_jsxs(_Fragment,{children:[\"| \",/*#__PURE__*/_jsx(\"em\",{children:workout.notes})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteWorkout(index),className:\"delete-btn\",\"aria-label\":\"Eintrag l\\xF6schen\",children:\"L\\xF6schen\"})]},index))})]}),tab==='infos'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"heading-entries center\",children:\"\\xDCbungs- und Trainingsinfos\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tracking-container\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"heading-main\",children:\"Core\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Core-Training st\\xE4rkt die Rumpfmuskulatur (Bauch, R\\xFCcken, H\\xFCfte) und verbessert Stabilit\\xE4t, Haltung und Kraft\\xFCbertragung. Typische \\xDCbungen: Planks, Russian Twists, Dead Bugs.\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"heading-main\",children:\"Push-Ups\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Push-Ups (Liegest\\xFCtze) trainieren Brust, Schultern und Trizeps. Sie f\\xF6rdern Kraft, Stabilit\\xE4t und k\\xF6nnen in vielen Varianten ausgef\\xFChrt werden.\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"heading-main\",children:\"Mobility\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Mobility-Training verbessert die Beweglichkeit und Gelenkgesundheit. Es hilft Verletzungen vorzubeugen und die Leistung zu steigern. Typische \\xDCbungen: Stretching, dynamische Bewegungen.\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"heading-main\",children:\"Farmer's Walk\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Der Farmer's Walk ist eine funktionelle \\xDCbung f\\xFCr Griffkraft, Rumpfstabilit\\xE4t und Kondition. Man tr\\xE4gt schwere Gewichte \\xFCber eine bestimmte Strecke.\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"heading-main\",children:\"Trizeps\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Trizeps-\\xDCbungen st\\xE4rken den hinteren Oberarm. Wichtige \\xDCbungen: Trizeps-Dips, Trizepsdr\\xFCcken, enge Liegest\\xFCtze.\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"heading-main\",children:\"Sprung\\xFCbungen\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Sprung\\xFCbungen (Plyometrics) f\\xF6rdern Explosivit\\xE4t, Schnellkraft und Koordination. Beispiele: Box Jumps, Burpees, Tuck Jumps.\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"heading-main\",children:\"Power Cleans\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Power Cleans sind eine Gewichtheber\\xFCbung f\\xFCr Explosivit\\xE4t, Ganzk\\xF6rperkraft und Technik. Sie trainieren Beine, R\\xFCcken, Schultern und Core.\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"heading-main\",children:\"Agility\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Agility-Training verbessert die Beweglichkeit, Reaktionsf\\xE4higkeit und Schnelligkeit. Typische \\xDCbungen: Agility Ladder, Richtungswechsel, H\\xFCtchen-Parcours.\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"heading-main\",children:\"Speed & Plyos\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Speed & Plyos kombinieren Schnelligkeits- und Sprungkrafttraining. Ziel: Explosivit\\xE4t, Sprintleistung und athletische Bewegungen zu verbessern.\"})]})]})]});};export default TrackingSystem;","map":{"version":3,"names":["React","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","register","TrackingSystem","workouts","setWorkouts","exercise","setExercise","sets","setSets","reps","setReps","weight","setWeight","duration","setDuration","notes","setNotes","tab","setTab","exerciseOptions","timeExercises","isTimeExercise","ex","includes","handleAddWorkout","newWorkout","date","Date","toLocaleDateString","parseInt","parseFloat","resetForm","exportCSV","header","csv","map","w","concat","join","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","handleDeleteWorkout","index","filter","_","i","className","children","onClick","onSubmit","e","preventDefault","htmlFor","id","value","onChange","target","required","opt","placeholder","workout","length","undefined","reduce","sum","_w$weight","_w$sets","_w$reps","kraftWorkouts","_w$weight2","toFixed","data","labels","datasets","label","borderColor","backgroundColor","tension","options","responsive","plugins","legend","color","scales","x","ticks","grid","y","Array","from","Set","exerciseName","exerciseData"],"sources":["E:/Programmieren/Traningsplan/src/components/TrackingSystem.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from 'react';\r\nimport './TrackingSystem.css';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\ntype Workout = {\r\n    exercise: string;\r\n    sets?: number;\r\n    reps?: number;\r\n    weight?: number;\r\n    duration?: number;\r\n    date: string;\r\n    notes: string;\r\n};\r\n\r\nconst TrackingSystem: React.FC = () => {\r\n    const [workouts, setWorkouts] = useState<Workout[]>([]);\r\n    const [exercise, setExercise] = useState<string>('');\r\n    const [sets, setSets] = useState<string>('');\r\n    const [reps, setReps] = useState<string>('');\r\n    const [weight, setWeight] = useState<string>('');\r\n    // Erweiterung: Zeit-Feld für Planks/Core/Mobility/Farmer's Walk/Sprints\r\n    const [duration, setDuration] = useState<string>('');\r\n    const [notes, setNotes] = useState<string>('');\r\n    const [tab, setTab] = useState<'entry' | 'stats' | 'infos'>('entry');\r\n\r\n    // Dropdown-Übungen\r\n    const exerciseOptions = [\r\n        'Kniebeugen', 'Bankdrücken', 'Rudern', 'Schulterdrücken', 'Kreuzheben', 'Ausfallschritte', 'Klimmzüge', 'Push-Ups', 'Trizepsdrücken', 'Sprungübungen', 'Power Cleans', \"Farmer's Walk\", 'Planks', 'Core', 'Mobility', 'Sprints', 'Agility Ladder', 'Medizinballwürfe', 'Box Jumps'\r\n    ];\r\n    const timeExercises = ['Planks', 'Core', 'Mobility', \"Farmer's Walk\", 'Sprints'];\r\n    function isTimeExercise(ex: string) {\r\n        return timeExercises.includes(ex);\r\n    }\r\n\r\n    const handleAddWorkout = () => {\r\n        const newWorkout: Workout = {\r\n            exercise,\r\n            date: new Date().toLocaleDateString(),\r\n            notes,\r\n        };\r\n        if (isTimeExercise(exercise)) {\r\n            newWorkout.duration = parseInt(duration);\r\n            newWorkout.weight = weight ? parseFloat(weight) : 0;\r\n        } else {\r\n            newWorkout.sets = parseInt(sets);\r\n            newWorkout.reps = parseInt(reps);\r\n            newWorkout.weight = parseFloat(weight);\r\n        }\r\n        setWorkouts([...workouts, newWorkout]);\r\n        resetForm();\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setExercise('');\r\n        setSets('');\r\n        setReps('');\r\n        setWeight('');\r\n        setDuration('');\r\n        setNotes('');\r\n    };\r\n\r\n    // CSV Export\r\n    const exportCSV = () => {\r\n        const header = 'Datum,Übung,Gewicht,Sätze,Wdh.,Notizen\\n';\r\n        const csv =\r\n            header +\r\n            workouts\r\n                .map(\r\n                    (w) => `${w.date},${w.exercise},${w.weight},${w.sets},${w.reps},${w.notes}`\r\n                )\r\n                .join('\\n');\r\n        const blob = new Blob([csv], { type: 'text/csv' });\r\n        const url = URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = 'trainingsdaten.csv';\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n    };\r\n\r\n    // Workout löschen\r\n    const handleDeleteWorkout = (index: number) => {\r\n        setWorkouts(workouts.filter((_, i) => i !== index));\r\n    };\r\n\r\n    return (\r\n    <div className=\"tracking-main\">\r\n            <div className=\"tab-bar\">\r\n                <button onClick={() => setTab('entry')} className={tab==='entry' ? 'tab-btn active' : 'tab-btn'}>Trainingseintrag</button>\r\n                <button onClick={() => setTab('stats')} className={tab==='stats' ? 'tab-btn active' : 'tab-btn'}>Auswertung</button>\r\n                <button onClick={() => setTab('infos')} className={tab==='infos' ? 'tab-btn active' : 'tab-btn'}>Infos</button>\r\n            </div>\r\n            {tab === 'entry' && (\r\n                <>\r\n                    <h2 className=\"heading-entries center\">Workout Tracking</h2>\r\n                    <div className=\"tracking-container\">\r\n                        <h3 className=\"heading-exercise\">Trainingsplan für 18 Wochen – Right Guard (American Football)</h3>\r\n                        <p><strong>3x pro Woche, jeweils ca. 2 Stunden</strong></p>\r\n                        <ol className=\"plan-list\">\r\n                            <li><strong>Woche 1-4: Grundlagen & Technik</strong>\r\n                                <ul>\r\n                                    <li>Tag 1 (Kraft): Kniebeugen 4x6, Bankdrücken 4x6, Rudern 4x8, Planks 3x1min</li>\r\n                                    <li>Tag 2 (Explosivkraft): Kettlebell Swings 4x12, Box Jumps 4x8, Medizinballwürfe 4x10, Mobility 15min</li>\r\n                                    <li>Tag 3 (Oberkörper & Speed): Schulterdrücken 4x8, Klimmzüge (Assist) 4xmax, Push-Ups 4xmax, Sprints (10-20m) 6x</li>\r\n                                </ul>\r\n                            </li>\r\n                            <li><strong>Woche 5-8: Kraftsteigerung & Explosivität</strong>\r\n                                <ul>\r\n                                    <li>Tag 1 (Beine & Core): Kniebeugen 5x5, Kreuzheben 4x6, Ausfallschritte 4x10, Farmer's Walk 4x30m</li>\r\n                                    <li>Tag 2 (Oberkörper): Bankdrücken 5x5, Schulterdrücken 4x8, Rudern 4x8, Trizepsdrücken 4x12</li>\r\n                                    <li>Tag 3 (Speed & Plyos): Sprungübungen 4x8, Medizinballwürfe 4x10, Agility Ladder 10min, Core 3x20</li>\r\n                                </ul>\r\n                            </li>\r\n                            <li><strong>Woche 9-12: Maximalkraft & Schnellkraft</strong>\r\n                                <ul>\r\n                                    <li>Tag 1 (Kraft & Explosivität): Kniebeugen 5x4, Power Cleans 5x4, Planks 3x1min, Mobility 10min</li>\r\n                                    <li>Tag 2 (Oberkörper): Bankdrücken 5x4, Klimmzüge 4xmax, Push-Ups 4xmax, Trizepsdrücken 4x10</li>\r\n                                    <li>Tag 3 (Speed & Agility): Explosivität 4x8, Sprints (20-30m) 8x, Agility Ladder & Richtungswechsel 15min, Core 3x20</li>\r\n                                </ul>\r\n                            </li>\r\n                            <li><strong>Woche 13-16: Intensivierung & Peak</strong>\r\n                                <ul>\r\n                                    <li>Tag 1 (Kraft): Kniebeugen 5x3, Kreuzheben 4x4, Farmer's Walk 4x40m, Planks 3x1min</li>\r\n                                    <li>Tag 2 (Oberkörper): Bankdrücken 5x3, Schulterdrücken 4x6, Rudern 4x8, Mobility 10min</li>\r\n                                    <li>Tag 3 (Speed & Plyos): Speed & Plyos 20min, Explosivität 4x8, Core 3x20</li>\r\n                                </ul>\r\n                            </li>\r\n                            <li><strong>Woche 17-18: Saisonvorbereitung & Regeneration</strong>\r\n                                <ul>\r\n                                    <li>Tag 1: Kniebeugen 3x5, Power Cleans 3x5, Planks 3x1min</li>\r\n                                    <li>Tag 2: Bankdrücken 3x5, Klimmzüge 3xmax, Push-Ups 3xmax</li>\r\n                                    <li>Tag 3: Explosivität 3x8, Mobility & Stretching 20min</li>\r\n                                </ul>\r\n                            </li>\r\n                        </ol>\r\n                        <p className=\"plan-note\">\r\n                            <strong>Hinweise:</strong> Steigere die Gewichte jede Woche moderat, achte auf saubere Technik.<br />\r\n                            Explosivkraft-Übungen immer mit maximaler Geschwindigkeit ausführen.<br />\r\n                            Sprints und Agility-Drills mit voller Intensität, aber ausreichend Pausen.<br />\r\n                            Mobility und Core sind in jeder Einheit wichtig für Verletzungsprophylaxe und Stabilität.\r\n                        </p>\r\n                    </div>\r\n                    <form\r\n                        onSubmit={(e: FormEvent<HTMLFormElement>) => {\r\n                            e.preventDefault();\r\n                            handleAddWorkout();\r\n                        }}\r\n                        className=\"form-grid\"\r\n                    >\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"exercise\">Übung</label>\r\n                            <select\r\n                                id=\"exercise\"\r\n                                value={exercise}\r\n                                onChange={(e: ChangeEvent<HTMLSelectElement>) => setExercise(e.target.value)}\r\n                                required\r\n                                className=\"input-field\"\r\n                            >\r\n                                <option value=\"\">Bitte wählen...</option>\r\n                                {exerciseOptions.map(opt => (\r\n                                    <option key={opt} value={opt}>{opt}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        {/* Dynamische Felder je nach Übungstyp */}\r\n                        {!isTimeExercise(exercise) && exercise && (\r\n                            <>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"weight\">Gewicht (kg)</label>\r\n                                    <input\r\n                                        id=\"weight\"\r\n                                        type=\"number\"\r\n                                        placeholder=\"Gewicht\"\r\n                                        value={weight}\r\n                                        onChange={(e: ChangeEvent<HTMLInputElement>) => setWeight(e.target.value)}\r\n                                        required\r\n                                        className=\"input-field\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"sets\">Sätze</label>\r\n                                    <input\r\n                                        id=\"sets\"\r\n                                        type=\"number\"\r\n                                        placeholder=\"Sets\"\r\n                                        value={sets}\r\n                                        onChange={(e: ChangeEvent<HTMLInputElement>) => setSets(e.target.value)}\r\n                                        required\r\n                                        className=\"input-field\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"reps\">Wiederholungen</label>\r\n                                    <input\r\n                                        id=\"reps\"\r\n                                        type=\"number\"\r\n                                        placeholder=\"Reps\"\r\n                                        value={reps}\r\n                                        onChange={(e: ChangeEvent<HTMLInputElement>) => setReps(e.target.value)}\r\n                                        required\r\n                                        className=\"input-field\"\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                        {isTimeExercise(exercise) && exercise && (\r\n                            <>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"duration\">Dauer (Sekunden)</label>\r\n                                    <input\r\n                                        id=\"duration\"\r\n                                        type=\"number\"\r\n                                        placeholder=\"Zeit in Sekunden\"\r\n                                        value={duration}\r\n                                        onChange={(e: ChangeEvent<HTMLInputElement>) => setDuration(e.target.value)}\r\n                                        required\r\n                                        className=\"input-field\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"weight\">Zusatzgewicht (kg)</label>\r\n                                    <input\r\n                                        id=\"weight\"\r\n                                        type=\"number\"\r\n                                        placeholder=\"Zusatzgewicht (kg)\"\r\n                                        value={weight}\r\n                                        onChange={(e: ChangeEvent<HTMLInputElement>) => setWeight(e.target.value)}\r\n                                        className=\"input-field\"\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"notes\">Notizen</label>\r\n                            <input\r\n                                id=\"notes\"\r\n                                type=\"text\"\r\n                                placeholder=\"Notizen\"\r\n                                value={notes}\r\n                                onChange={(e: ChangeEvent<HTMLInputElement>) => setNotes(e.target.value)}\r\n                                className=\"input-field\"\r\n                            />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"tab-btn active\">Workout hinzufügen</button>\r\n                    </form>\r\n                    <h3 className=\"heading-entries\">Deine Einträge</h3>\r\n                    <ul className=\"entries-list\">\r\n                        {workouts.map((workout, index) => (\r\n                            <li key={index} className=\"entry-item light\">\r\n                                <span>\r\n                                    <strong>{workout.date}</strong>: {workout.exercise} – {workout.weight} kg, {workout.sets} Sätze x {workout.reps} Wdh. {workout.notes && <>| <em>{workout.notes}</em></>}\r\n                                </span>\r\n                                <button onClick={() => handleDeleteWorkout(index)} className=\"delete-btn\" aria-label=\"Eintrag löschen\">Löschen</button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <button onClick={exportCSV} className=\"export-btn\">Export als CSV</button>\r\n                </>\r\n            )}\r\n            {tab === 'stats' && (\r\n                <>\r\n                    <h2 className=\"heading-entries center\">Auswertung</h2>\r\n                    <div className=\"tracking-container\">\r\n                        <p><strong>Trainingsanzahl:</strong> {workouts.length}</p>\r\n                        <p><strong>Gesamtgewicht bewegt:</strong> {\r\n                            workouts\r\n                                .filter(w => w.weight !== undefined && w.sets !== undefined && w.reps !== undefined)\r\n                                .reduce((sum, w) => sum + ((w.weight ?? 0) * (w.sets ?? 0) * (w.reps ?? 0)), 0)\r\n                        } kg</p>\r\n                        <p><strong>Durchschnittliches Gewicht pro Satz:</strong> {\r\n                            (() => {\r\n                                const kraftWorkouts = workouts.filter(w => w.weight !== undefined);\r\n                                return kraftWorkouts.length > 0\r\n                                    ? (kraftWorkouts.reduce((sum, w) => sum + (w.weight ?? 0), 0) / kraftWorkouts.length).toFixed(2)\r\n                                    : 0;\r\n                            })()\r\n                        } kg</p>\r\n                        <p><strong>Letztes Training:</strong> {workouts.length > 0 ? workouts[workouts.length-1].date : '-'}</p>\r\n                    </div>\r\n                    <div className=\"tracking-container\">\r\n                        <h3 className=\"heading-main\">Gewichtsentwicklung (alle Einträge)</h3>\r\n                        <Line\r\n                            data={{\r\n                                labels: workouts.map(w => w.date),\r\n                                datasets: [\r\n                                    {\r\n                                        label: 'Gewicht (kg)',\r\n                                        data: workouts.map(w => w.weight),\r\n                                        borderColor: '#43a047',\r\n                                        backgroundColor: 'rgba(67,160,71,0.2)',\r\n                                        tension: 0.3,\r\n                                    },\r\n                                ],\r\n                            }}\r\n                            options={{\r\n                                responsive: true,\r\n                                plugins: {\r\n                                    legend: {\r\n                                        labels: { color: '#f5f5f5' }\r\n                                    },\r\n                                },\r\n                                scales: {\r\n                                    x: {\r\n                                        ticks: { color: '#f5f5f5' },\r\n                                        grid: { color: '#333' }\r\n                                    },\r\n                                    y: {\r\n                                        ticks: { color: '#f5f5f5' },\r\n                                        grid: { color: '#333' }\r\n                                    }\r\n                                }\r\n                            }}\r\n                        />\r\n                        <h3 className=\"heading-main heading-margin\">Auswertung pro Übung</h3>\r\n                        {Array.from(new Set(workouts.map(w => w.exercise))).map((exerciseName) => {\r\n                            const exerciseData = workouts.filter(w => w.exercise === exerciseName);\r\n                            return (\r\n                                <div key={exerciseName} className=\"tracking-container\">\r\n                                    <h4 className=\"heading-exercise\">{exerciseName}</h4>\r\n                                    <Line\r\n                                        data={{\r\n                                            labels: exerciseData.map(w => w.date),\r\n                                            datasets: [\r\n                                                {\r\n                                                    label: `${exerciseName} Gewicht (kg)`,\r\n                                                    data: exerciseData.map(w => w.weight),\r\n                                                    borderColor: '#1976d2',\r\n                                                    backgroundColor: 'rgba(25,118,210,0.2)',\r\n                                                    tension: 0.3,\r\n                                                },\r\n                                            ],\r\n                                        }}\r\n                                        options={{\r\n                                            responsive: true,\r\n                                            plugins: {\r\n                                                legend: {\r\n                                                    labels: { color: '#f5f5f5' }\r\n                                                },\r\n                                            },\r\n                                            scales: {\r\n                                                x: {\r\n                                                    ticks: { color: '#f5f5f5' },\r\n                                                    grid: { color: '#333' }\r\n                                                },\r\n                                                y: {\r\n                                                    ticks: { color: '#f5f5f5' },\r\n                                                    grid: { color: '#333' }\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <h3 className=\"heading-entries\">Alle Einträge</h3>\r\n                    <ul className=\"entries-list\">\r\n                        {workouts.map((workout, index) => (\r\n                            <li key={index} className=\"entry-item\">\r\n                                <span>\r\n                                    <strong>{workout.date}</strong>: {workout.exercise} – {workout.weight} kg, {workout.sets} Sätze x {workout.reps} Wdh. {workout.notes && <>| <em>{workout.notes}</em></>}\r\n                                </span>\r\n                                <button onClick={() => handleDeleteWorkout(index)} className=\"delete-btn\" aria-label=\"Eintrag löschen\">Löschen</button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </>\r\n            )}\r\n            {tab === 'infos' && (\r\n                <>\r\n                    <h2 className=\"heading-entries center\">Übungs- und Trainingsinfos</h2>\r\n                    <div className=\"tracking-container\">\r\n                        <h3 className=\"heading-main\">Core</h3>\r\n                        <p>Core-Training stärkt die Rumpfmuskulatur (Bauch, Rücken, Hüfte) und verbessert Stabilität, Haltung und Kraftübertragung. Typische Übungen: Planks, Russian Twists, Dead Bugs.</p>\r\n                        <h3 className=\"heading-main\">Push-Ups</h3>\r\n                        <p>Push-Ups (Liegestütze) trainieren Brust, Schultern und Trizeps. Sie fördern Kraft, Stabilität und können in vielen Varianten ausgeführt werden.</p>\r\n                        <h3 className=\"heading-main\">Mobility</h3>\r\n                        <p>Mobility-Training verbessert die Beweglichkeit und Gelenkgesundheit. Es hilft Verletzungen vorzubeugen und die Leistung zu steigern. Typische Übungen: Stretching, dynamische Bewegungen.</p>\r\n                        <h3 className=\"heading-main\">Farmer's Walk</h3>\r\n                        <p>Der Farmer's Walk ist eine funktionelle Übung für Griffkraft, Rumpfstabilität und Kondition. Man trägt schwere Gewichte über eine bestimmte Strecke.</p>\r\n                        <h3 className=\"heading-main\">Trizeps</h3>\r\n                        <p>Trizeps-Übungen stärken den hinteren Oberarm. Wichtige Übungen: Trizeps-Dips, Trizepsdrücken, enge Liegestütze.</p>\r\n                        <h3 className=\"heading-main\">Sprungübungen</h3>\r\n                        <p>Sprungübungen (Plyometrics) fördern Explosivität, Schnellkraft und Koordination. Beispiele: Box Jumps, Burpees, Tuck Jumps.</p>\r\n                        <h3 className=\"heading-main\">Power Cleans</h3>\r\n                        <p>Power Cleans sind eine Gewichtheberübung für Explosivität, Ganzkörperkraft und Technik. Sie trainieren Beine, Rücken, Schultern und Core.</p>\r\n                        <h3 className=\"heading-main\">Agility</h3>\r\n                        <p>Agility-Training verbessert die Beweglichkeit, Reaktionsfähigkeit und Schnelligkeit. Typische Übungen: Agility Ladder, Richtungswechsel, Hütchen-Parcours.</p>\r\n                        <h3 className=\"heading-main\">Speed & Plyos</h3>\r\n                        <p>Speed & Plyos kombinieren Schnelligkeits- und Sprungkrafttraining. Ziel: Explosivität, Sprintleistung und athletische Bewegungen zu verbessern.</p>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TrackingSystem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}